{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vue/Game.vue?b0b3","webpack:///./src/assets/map.png","webpack:///./src/game/storage/GlobalStorage.ts","webpack:///./src/App.vue?517a","webpack:///./src/vue/Game.vue?ad86","webpack:///./src/game/AssetsLoader.ts","webpack:///./src/game/storage/Model.ts","webpack:///./src/game/events/EventType.ts","webpack:///./src/game/map/MapDebugContainer.ts","webpack:///./src/game/events/EventManager.ts","webpack:///./src/game/map/MapContainer.ts","webpack:///./src/vendors/particles/actions/Action.ts","webpack:///./src/vendors/particles/actions/ActionCallback.ts","webpack:///./src/vendors/particles/events/ParticleEvents.ts","webpack:///./src/vendors/particles/actions/BoundingBox.ts","webpack:///./src/vendors/particles/actions/Move.ts","webpack:///./src/vendors/particles/actions/TurnTowardsPoint.ts","webpack:///./src/vendors/particles/actions/ZonedAction.ts","webpack:///./src/vendors/particles/counters/ZeroCounter.ts","webpack:///./src/vendors/particles/emitters/Emitter.ts","webpack:///./src/vendors/particles/zones/RectangleZone.ts","webpack:///./src/game/KeyPoll.ts","webpack:///./src/game/Keyboard.ts","webpack:///./src/vendors/particles/particles/Particle.ts","webpack:///./src/vendors/particles/particles/Particle2D.ts","webpack:///./src/game/logic/CustomParticle.ts","webpack:///./src/game/logic/UpdateUserPositionAction.ts","webpack:///./src/game/logic/Movements.ts","webpack:///./src/game/Game.ts","webpack:///./src/vue/Game.vue","webpack:///./src/vue/Game.vue?2301","webpack:///./src/vue/Game.vue?db89","webpack:///./src/App.vue","webpack:///./src/App.vue?c9fc","webpack:///./src/App.vue?665f","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","AnimateMapEntityType","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","staticRenderFns","ref","json","map","Map","arr","loadImage","Promise","all","then","resolve","fileName","itr","keys","next","indexOf","canvas","getImageFromMap","from","frames","element","sheet","document","createElement","width","spriteSourceSize","w","height","h","ctx","getContext","drawImage","frame","x","y","url","image","onload","set","src","attributes","keyOrAttributes","silent","changed","emit","forEach","has","EventEmitter","EventType","WALKER_DEFAULT_SPEED","QA_BOTS_NUMBER","QA_VENUES_NUMBER","worldWidth","worldHeight","zoom","cameraRect","hero","users","replicatedUsers","venues","usersQT","venuesQT","config","init","GlobalStorage","drawMainOuterRadius","drawLeftOuterRarius","drawRightOuterRadius","time","drawHero","addChild","clear","beginFill","drawCircle","alpha","endFill","center","getCenter","g","EventManager","_app","_viewport","_viewportFollowTarget","_viewportRectMultiplier","_background","_debug","initViewport","initBackground","initDebugContainer","on","UPDATE_CAMERA_ZOOM","setupVewportFollowing","setZoom","update","interaction","renderer","plugins","drag","factor","pinch","wheel","percent","smooth","decelerate","clamp","left","right","top","bottom","clampZoom","maxWidth","maxHeight","moveCenter","_onViewportMoved","_onViewportZoomed","options","radius","Math","sqrt","follow","view","viewport","lastViewport","scaleX","scaleY","screenWidth","screenHeight","rect","UPDATE_CAMERA_RECT","layer","e","point","getLocalPosition","global","POINTERDOWN_ON_VIEWPORT","_priority","emitter","particle","callBack","once","_called","_callBack","_once","ZONE_COLLISION","BOUNDING_BOX_COLLISION","bounce","priority","_left","_top","_right","_bottom","_bounce","position","collisionRadius","collide","velX","velY","hasEventListener","detail","action","dispatchEvent","CustomEvent","previousX","previousY","power","_power","_x","_y","velLength","dx","dy","acc","targetX","targetY","len","dot","perpX","perpY","zone","invertZone","_action","_zone","_invert","addedToEmitter","removedFromEmitter","contains","_counter","_actions","_particles","_maximumFrameTime","_running","_eventTypes","_eventDispatcher","type","callback","addEventListener","removeEventListener","event","startEmitter","pop","sort","prioritySort","index","killAllParticles","addParticles","particles","removeParticle","b1","b2","isDead","_width","_height","isNaN","random","previousPosition","intersect","collision","WORD_SIZE","Int32Array","keyDownHandler","keyCode","floor","keyUpHandler","isDown","A","D","S","W","LEFT","RIGHT","UP","DOWN","color","scale","mass","lifetime","age","energy","_previousColor","cloneInto","Particle","rotation","angVelocity","sortID","_previousMass","_previousRadius","_inertia","user","heroParticle","heroEmitter","pointed","keyboarded","destinationZone","turnTowardsPoint","zonedAction","heroSpeedSqLimitByZoom","mainEmitter","emitters","keyPoll","setupMainEmitter","setupHeroParticle","setupEventManager","createHeroControlModule","moveHeroTo","_onUpdateZoom","speed","speedLimit","getSpeedLimit","_limitSq","actions","addParticle","addAction","limit","pointHeroToStop","precision","down","removeAction","console","log","pointHeroTo","_containerElement","_renderer","_stage","_mapContainer","_movements","initHero","initMovements","initAssest","initRenderer","initMap","ticker","add","id","Date","now","videoUrlString","avatarUrlString","dotColor","assets","execute","transparent","antialias","resizeTo","backgroundColor","resolution","devicePixelRatio","stage","appendChild","start","setTimeout","$refs","game","components","component","Game","productionTip","render","$mount"],"mappings":"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","file":"js/app.05f7eb15.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=style&index=0&id=cc5a28ae&lang=stylus&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/map.6e210f5d.png\";","import { Model } from \"./Model\";\r\nimport { Box, QuadTree } from \"js-quadtree\";\r\n\r\nexport enum AnimateMapEntityType {\r\n  user,\r\n  venue,\r\n  userWithControls,\r\n}\r\n\r\nexport interface AnimateMapEntity {\r\n  type: AnimateMapEntityType;\r\n  id: string;\r\n  x: number;\r\n  y: number;\r\n  data: ReplicatedUserData | ReplicatedVenueData;\r\n}\r\n\r\nexport interface ReplicatedUserData {\r\n  videoUrlString: string;\r\n  avatarUrlString: string | string[];\r\n  dotColor: number; //hex\r\n}\r\n\r\nexport interface ReplicatedUser extends AnimateMapEntity {\r\n  data: ReplicatedUserData;\r\n}\r\n\r\nexport interface ReplicatedVenueData {\r\n  videoUrlString: string;\r\n  imageUrlString: string | string[];\r\n}\r\n\r\nexport interface ReplicatedVenue extends AnimateMapEntity {\r\n  data: ReplicatedVenueData;\r\n}\r\n\r\nexport class AnimateMapConfig {\r\n  WALKER_DEFAULT_SPEED = 10;\r\n  QA_BOTS_NUMBER = 100;\r\n  QA_VENUES_NUMBER = 80;\r\n}\r\n\r\nexport interface IGlobalStorage {\r\n  worldWidth: number;\r\n  worldHeight: number;\r\n  zoom: number;\r\n  layer: number;\r\n  cameraRect: Box;\r\n  hero: ReplicatedUser | null;\r\n  users: Map<string, ReplicatedUser>;\r\n  replicatedUsers: Map<string, ReplicatedUser>;\r\n  venues: Map<string, ReplicatedVenue>;\r\n  usersQT: QuadTree | null;\r\n  venuesQT: QuadTree | null;\r\n  config: AnimateMapConfig | null;\r\n}\r\n\r\nexport default new Model({\r\n  worldWidth: 9920,\r\n  worldHeight: 9920,\r\n  zoom: 5,\r\n  cameraRect: new Box(0, 0, 0, 0),\r\n  hero: null,\r\n  users: new Map(),\r\n  replicatedUsers: new Map(),\r\n  venues: new Map(),\r\n  usersQT: null,\r\n  venuesQT: null,\r\n  config: new AnimateMapConfig(),\r\n} as IGlobalStorage);\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrap_container\",attrs:{\"id\":\"app\"}},[_c('game',{staticClass:\"wrap_container\"})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"game\",staticClass:\"game wrap_container\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import map_png from '../assets/map.png';\r\nimport { Texture } from '@pixi/core';\r\n\r\nexport default class AssetsLoader {\r\n    private json: any | null = null;\r\n    private map: Map<string, HTMLCanvasElement> = new Map();\r\n\r\n    public execute(): Promise<this> {\r\n        const arr: Array<Promise<any>> = [];\r\n\r\n        arr.push(this.loadImage(map_png));\r\n\r\n        return Promise.all(arr)\r\n            .then(() => {\r\n                return Promise.resolve(this)\r\n            });\r\n    }\r\n\r\n    private getImageFromMap(fileName: string): HTMLCanvasElement | null {\r\n        const itr: IterableIterator<string> = this.map.keys();\r\n\r\n        for (let key: string = itr.next().value; key; key = itr.next().value) {\r\n            if (key.indexOf(fileName) > -1) {\r\n                return this.map.get(key) as HTMLCanvasElement;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getTexture(fileName: string): Texture | null {\r\n        const canvas: HTMLCanvasElement | null = this.getImageFromMap(fileName);\r\n        if (canvas) {\r\n            return Texture.from(canvas);\r\n        }\r\n\r\n        if (this.json.frames[`${fileName}.png`]) {\r\n            const element: any = this.json.frames[`${fileName}.png`];\r\n            const sheet: HTMLCanvasElement | null = this.getImageFromMap('gui');\r\n            \r\n            const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n            canvas.width = element.spriteSourceSize.w;\r\n            canvas.height = element.spriteSourceSize.h;\r\n\r\n            const ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\r\n            ctx.drawImage(sheet!, \r\n                element.frame.x, \r\n                element.frame.y,\r\n                element.frame.w,\r\n                element.frame.h,\r\n                0,\r\n                0,\r\n                canvas.width,\r\n                canvas.height,\r\n            );\r\n            // document.body.appendChild(canvas)\r\n            return Texture.from(canvas);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private loadImage(url: string): Promise<any> {\r\n        return new Promise(resolve => {\r\n            const image: HTMLImageElement = document.createElement('img');\r\n            image.onload = () => {\r\n                const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n                canvas.width = image.width;\r\n                canvas.height = image.height;\r\n                const ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\r\n                ctx.drawImage(image, 0, 0);\r\n                this.map.set(url, canvas);\r\n\r\n                resolve(true);\r\n            }\r\n            image.src = url;\r\n        });\r\n    }\r\n\r\n    private loadJSON(url: string): Promise<any> {\r\n        return new Promise(resolve => {\r\n            // const data64 = btoa(JSON.stringify(url));\r\n            // const dataURL = `data:text/json;base64, ${data64}`;\r\n\r\n            this.json = url;//dataURL;\r\n    \r\n            resolve(true);\r\n        });\r\n    }\r\n}","import { utils } from \"pixi.js\";\r\n\r\nexport class Model extends utils.EventEmitter {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  public attributes: Map<string, any> = new Map<string, any>();\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  constructor(attributes: any = {}) {\r\n    super();\r\n\r\n    this.set(attributes);\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  public set(keyOrAttributes: string | any, value: any | null = null): void {\r\n    const silent = value && value.silent;\r\n    const changed = new Map();\r\n\r\n    if (typeof keyOrAttributes === \"string\") {\r\n      this.attributes.set(keyOrAttributes, value);\r\n\r\n      changed.set(keyOrAttributes, value);\r\n\r\n      this.emit(\"change:\" + keyOrAttributes, { changed });\r\n    } else {\r\n      Object.keys(keyOrAttributes).forEach((key) => {\r\n        this.attributes.set(key, keyOrAttributes[key]);\r\n        changed.set(key, keyOrAttributes[key]);\r\n      });\r\n\r\n      Object.keys(keyOrAttributes).forEach((key) => {\r\n        this.emit(\"change:\" + key, { changed });\r\n      });\r\n    }\r\n\r\n    if (!silent) {\r\n      this.emit(\"change\", {\r\n        changed,\r\n      });\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  public get(key: string): any | null {\r\n    if (this.attributes.has(key)) {\r\n      return this.attributes.get(key);\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { Box } from \"js-quadtree\";\r\nimport { ReplicatedUser, ReplicatedVenue } from \"../storage/GlobalStorage\";\r\n\r\nexport enum EventType {\r\n  UPDATE_CAMERA_ZOOM = \"EventType.UPDATE_CAMERA_ZOOM\",\r\n  UPDATE_CAMERA_RECT = \"EventType.UPDATE_CAMERA_RECT\",\r\n  UPDATE_USERS = \"EventType.UPDATE_USERS\",\r\n  UPDATE_VENUES = \"EventType.UPDATE_VENUES\",\r\n  UPDATE_PLAYER_POSITION = \"EventType.UPDATE_PLAYER_POSITION\",\r\n  POINTERDOWN_ON_VIEWPORT = \"EventType.POINTERDOWN_ON_VIEWPORT\",\r\n}\r\n\r\nexport type EventUpdateCameraZoomProps = number;\r\n\r\nexport type EventUpdateCameraRectProps = Box;\r\n\r\nexport type EventUpdateUsersProps = ReplicatedUser[];\r\n\r\nexport type EventUpdateVenuesProps = ReplicatedVenue[];\r\n\r\nexport type EventUpdatePlayerPositionProps = {\r\n  x: number;\r\n  y: number;\r\n};\r\n","import { Sprite, Container, Graphics, Point } from \"pixi.js\";\r\nimport GlobalStorage, { ReplicatedUser } from \"../storage/GlobalStorage\";\r\nexport default class MapDebugContainer extends Container {\r\n\r\n    private hero: Graphics | null = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        const worldWidth = GlobalStorage.get('worldWidth');\r\n        const worldHeight = GlobalStorage.get('worldHeight');\r\n\r\n        this.drawMainOuterRadius();\r\n        this.drawLeftOuterRarius();\r\n        this.drawRightOuterRadius();\r\n    }\r\n\r\n    public update(time: number): void {\r\n        this.drawHero();\r\n    }\r\n\r\n    private drawHero(): void {\r\n        const hero: ReplicatedUser = GlobalStorage.get('hero');\r\n        if (!hero) {\r\n            return;\r\n        }\r\n        if (!this.hero) {\r\n            this.hero = new Graphics();\r\n            this.addChild(this.hero);\r\n        }\r\n\r\n        this.hero.clear();\r\n        this.hero.beginFill(0xff0000);\r\n        this.hero.drawCircle(0, 0, 100);\r\n        this.hero.alpha = .5;\r\n        this.hero.endFill();\r\n        this.hero.x = hero.x;\r\n        this.hero.y = hero.y;\r\n    }\r\n\r\n    private drawMainOuterRadius(): void {\r\n        const center: Point = this.getCenter();\r\n        const g: Graphics = new Graphics();\r\n        g.beginFill(0x00ff00);\r\n        g.drawCircle(center.x, center.y, 1600);\r\n        g.endFill();\r\n        g.alpha = .1;\r\n        this.addChild(g);\r\n    }\r\n\r\n    private drawLeftOuterRarius(): void {\r\n        const center: Point = new Point(3533, 2151);\r\n        const g: Graphics = new Graphics();\r\n        g.beginFill(0x00ff00);\r\n        g.drawCircle(center.x, center.y, 600);\r\n        g.endFill();\r\n        g.alpha = .1;\r\n        this.addChild(g);\r\n    }\r\n\r\n    private drawRightOuterRadius(): void {\r\n        const center: Point = new Point(6141, 7741);\r\n        const g: Graphics = new Graphics();\r\n        g.beginFill(0x00ff00);\r\n        g.drawCircle(center.x, center.y, 800);\r\n        g.endFill();\r\n        g.alpha = .1;\r\n        this.addChild(g);\r\n    }\r\n\r\n    private getCenter(): Point {\r\n        const worldWidth = GlobalStorage.get('worldWidth');\r\n        const worldHeight = GlobalStorage.get('worldHeight');\r\n        // return new Point(worldWidth / 2, worldHeight / 2);\r\n        return new Point(5040, 4567);\r\n    }\r\n}\r\n","// import { BufferingDataProviderEvents } from \"../../bridges/DataProvider/BufferingDataProvider\";\r\n// import { EventType, EventUpdatePlayerPositionProps } from \"./EventType\";\r\n// import { IBufferingDataProvider } from \"../../bridges/IBufferingDataProvider\";\r\nimport { utils } from \"pixi.js\";\r\n\r\nclass EventManagerExtended extends utils.EventEmitter {\r\n//   private _dataProvider: IBufferingDataProvider | null = null;\r\n\r\n//   public setDataProvider(dataProvider: IBufferingDataProvider): void {\r\n//     if (!dataProvider) {\r\n//       return;\r\n//     }\r\n\r\n//     this._dataProvider = dataProvider;\r\n\r\n//     this._dataProvider.on(\r\n//       BufferingDataProviderEvents.PLAYER_BASE_POINT_CHANGED,\r\n//       this._onPlayerBasePointChanged\r\n//     );\r\n//   }\r\n\r\n//   private _onPlayerBasePointChanged({ x, y }: { x: number; y: number }) {\r\n//     this.emit(EventType.UPDATE_PLAYER_POSITION, {\r\n//       x,\r\n//       y,\r\n//     } as EventUpdatePlayerPositionProps);\r\n//   }\r\n}\r\n\r\nconst EventManager = new EventManagerExtended();\r\nexport default EventManager;\r\n","import { Box } from \"js-quadtree\";\r\nimport { MovedEventData, Viewport, ZoomedEventData } from \"pixi-viewport\";\r\nimport { Application, Container, Sprite } from \"pixi.js\";\r\nimport GlobalStorage, { ReplicatedUser } from \"../storage/GlobalStorage\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport MAP_IMAGE from '../../assets/map.png';\r\nimport MapDebugContainer from \"./MapDebugContainer\";\r\nimport EventManager from \"../events/EventManager\";\r\nimport { EventType, EventUpdateCameraRectProps, EventUpdateCameraZoomProps } from \"../events/EventType\";\r\n\r\nexport default class MapContainer extends Container {\r\n\r\n    private _viewport: Viewport | null = null;\r\n    private _viewportFollowTarget: Container | null = null;\r\n    private _viewportRectMultiplier = 1.2;\r\n    private _background: Sprite | null = null;\r\n    private _debug: MapDebugContainer | null = null;\r\n\r\n    constructor(private _app: Application) {\r\n        super();\r\n    }\r\n\r\n    public async init(): Promise<void> {\r\n        this.initViewport();\r\n        this.initBackground();\r\n        this.initDebugContainer();\r\n        \r\n\r\n        EventManager.on(EventType.UPDATE_CAMERA_ZOOM, this.setupVewportFollowing, this);\r\n        // TODO refactor\r\n        GlobalStorage.set('zoom', 2);\r\n        this._viewport?.setZoom(.2);\r\n        this.setupVewportFollowing();\r\n    }\r\n\r\n    public update(time: number): void {\r\n        this._debug?.update(time);\r\n\r\n        \r\n        const hero: ReplicatedUser = GlobalStorage.get('hero');\r\n        if (hero && this._viewportFollowTarget) {\r\n            this._viewportFollowTarget.x = hero.x;\r\n            this._viewportFollowTarget.y = hero.y;\r\n        }\r\n    }\r\n\r\n    private initViewport(): void {\r\n        const worldWidth = GlobalStorage.get(\"worldWidth\");\r\n        const worldHeight = GlobalStorage.get(\"worldHeight\");\r\n\r\n        this._viewport = new Viewport({\r\n            worldWidth: worldWidth,\r\n            worldHeight: worldHeight,\r\n            interaction: this._app.renderer.plugins.interaction,\r\n        })\r\n            .drag({ factor: 0.9 })\r\n            .pinch()\r\n            .wheel({ percent: 0.5, smooth: 10 })\r\n            .decelerate()\r\n            .clamp({\r\n                left: true,\r\n                right: true,\r\n                top: true,\r\n                bottom: true,\r\n            })\r\n            .clampZoom({\r\n                maxWidth: worldWidth,\r\n                maxHeight: worldHeight,\r\n            });\r\n\r\n        this._viewport.moveCenter(worldWidth / 2, worldHeight / 2);\r\n        this._viewport.on(\"moved\", this._onViewportMoved, this);\r\n        this._viewport.on(\"zoomed\", this._onViewportZoomed, this);\r\n\r\n        // GlobalStorage.set('zoom', this._viewport.zoom);\r\n\r\n        this.addChild(this._viewport);\r\n    }\r\n\r\n    private setupVewportFollowing(): void {\r\n        const hero: ReplicatedUser = GlobalStorage.get('hero');\r\n\r\n        if (!hero) {\r\n            return;\r\n        }\r\n\r\n        if (!this._viewportFollowTarget) {\r\n            this._viewportFollowTarget = new Container();\r\n            this._viewportFollowTarget.x = hero.x;\r\n            this._viewportFollowTarget.y = hero.y;\r\n            this.addChild(this._viewportFollowTarget);\r\n        }\r\n        const arr: Array<number> = [100, 1000, 10000];\r\n        const zoom = GlobalStorage.get('zoom');\r\n        const options = {\r\n            radius: Math.sqrt(arr[zoom])\r\n        };\r\n        this._viewport?.follow(this._viewportFollowTarget, options);\r\n    }\r\n\r\n    private _onViewportMoved(data: MovedEventData): void {\r\n        const view = data.viewport.lastViewport;\r\n        const x = -view?.x / view?.scaleX;\r\n        const y = -view?.y / view?.scaleY;\r\n        const width = data.viewport.screenWidth / view?.scaleX;\r\n        const height = data.viewport.screenHeight / view?.scaleY;\r\n\r\n        const rect = new Box(\r\n            x + (width - width * this._viewportRectMultiplier) / 2,\r\n            y + (height - height * this._viewportRectMultiplier) / 2,\r\n            width * this._viewportRectMultiplier,\r\n            height * this._viewportRectMultiplier\r\n        );\r\n\r\n        GlobalStorage.set(\"cameraRect\", rect);\r\n\r\n        EventManager.emit(\r\n          EventType.UPDATE_CAMERA_RECT,\r\n          rect as EventUpdateCameraRectProps\r\n        );\r\n    }\r\n\r\n    private _onViewportZoomed(data: ZoomedEventData): void {\r\n        const layer = GlobalStorage.get(\"layer\");\r\n        let value = 0;\r\n\r\n        if (data.viewport.lastViewport.scaleY > 0.6 && layer !== 0) {\r\n            value = 0;\r\n        } else if (data.viewport.lastViewport.scaleY < 0.2 && layer !== 2) {\r\n            value = 2;\r\n        } else if (layer !== 1) {\r\n            value = 1;\r\n        }\r\n\r\n        GlobalStorage.set(\"zoom\", value);\r\n\r\n        EventManager.emit(\r\n          EventType.UPDATE_CAMERA_ZOOM,\r\n          value as EventUpdateCameraZoomProps\r\n        );\r\n\r\n        this.setupVewportFollowing();\r\n    }\r\n\r\n    private initBackground(): void {\r\n        this._background = PIXI.Sprite.from(MAP_IMAGE);\r\n\r\n        this._viewport?.addChild(this._background);\r\n    }\r\n\r\n    private initDebugContainer(): void {\r\n        this._viewport?.on(\r\n            \"click\",\r\n            (e) => {\r\n              \r\n              const point: PIXI.Point = e.data.getLocalPosition(\r\n                this._background!,\r\n                e.data.global,\r\n                e.data.global\r\n              )\r\n                // TODO убрать отсюда\r\n              EventManager.emit(EventType.POINTERDOWN_ON_VIEWPORT, point);\r\n            },\r\n            this\r\n          );\r\n\r\n        this._debug = new MapDebugContainer();\r\n        this._viewport?.addChild(this._debug);\r\n    }\r\n\r\n\r\n}","import Emitter from \"../emitters/Emitter\";\r\nimport Particle2D from \"../particles/Particle2D\";\r\n\r\nexport default class Action {\r\n  protected _priority = 0;\r\n\r\n  public get priority(): number {\r\n    return this._priority;\r\n  }\r\n  public set priority(value: number) {\r\n    this._priority = value;\r\n  }\r\n\r\n  public removedFromEmitter(emitter: Emitter): void {\r\n    // console.log('action removedFromEmitter')\r\n  }\r\n\r\n  public addedToEmitter(emitter: Emitter): void {\r\n    // console.log('action addedToEmitter')\r\n  }\r\n\r\n  public update(emitter: Emitter, particle: Particle2D, time: number): void {\r\n    // console.log('action update')\r\n  }\r\n}\r\n","import Emitter from \"../emitters/Emitter\";\r\nimport Particle from \"../particles/Particle2D\";\r\nimport Action from \"./Action\";\r\n\r\n/*\r\n * Для использования с ZonedAction\r\n */\r\nexport default class ActionCallback extends Action {\r\n  private _callBack: Function;\r\n  private _once: boolean;\r\n  private _called = false;\r\n\r\n  constructor(callBack: Function, once = false) {\r\n    super();\r\n    this._callBack = callBack;\r\n    this._once = once;\r\n  }\r\n\r\n  public update(emitter: Emitter, particle: Particle, time: number): void {\r\n    if (this._once && !this._called) {\r\n      this._callBack();\r\n    } else {\r\n      this._callBack();\r\n    }\r\n\r\n    this._called = true;\r\n  }\r\n}\r\n","export default class ParticleEvents {\r\n  static ZONE_COLLISION = \"zoneCollision\";\r\n  static BOUNDING_BOX_COLLISION = \"boundingBoxCollision\";\r\n}\r\n","/**\r\n * The BoundingBox action confines each particle to a rectangle region. The\r\n * particle bounces back off the sides of the rectangle when it reaches\r\n * the edge. The bounce treats the particle as a circular body. By default,\r\n * no energy is lost in the collision. This can be modified by setting the\r\n * bounce property to a value other than 1, its default value.\r\n *\r\n * This action has a priority of -20, so that it executes after\r\n * all movement has occured.\r\n */\r\n\r\nimport Emitter from \"../emitters/Emitter\";\r\nimport ParticleEvents from \"../events/ParticleEvents\";\r\nimport Particle from \"../particles/Particle2D\";\r\nimport Action from \"./Action\";\r\n\r\nexport default class BoundingBox extends Action {\r\n  private _left: number;\r\n  private _top: number;\r\n  private _right: number;\r\n  private _bottom: number;\r\n  private _bounce: number;\r\n\r\n  /**\r\n   * The constructor creates a BoundingBox action for use by\r\n   * an emitter. To add a BoundingBox to all particles created by an emitter,\r\n   * use the emitter's addAction method.\r\n   *\r\n   * @see org.flintparticles.common.emitters.Emitter#addAction()\r\n   *\r\n   * @param left The left coordinate of the box.\r\n   * @param top The top coordinate of the box.\r\n   * @param right The right coordinate of the box.\r\n   * @param bottom The bottom coordinate of the box.\r\n   * @param bounce The coefficient of restitution when the particles bounce off the\r\n   * sides of the box. A value of 1 gives a pure elastic collision, with no energy loss.\r\n   * A value between 0 and 1 causes the particle to loose enegy in the collision. A value\r\n   * greater than 1 causes the particle to gain energy in the collision.\r\n   */\r\n  constructor(left = 0, top = 0, right = 0, bottom = 0, bounce = 1) {\r\n    super();\r\n    this.priority = -20;\r\n    this._left = left;\r\n    this._top = top;\r\n    this._right = right;\r\n    this._bottom = bottom;\r\n    this._bounce = bounce;\r\n  }\r\n\r\n  /**\r\n   * The left coordinate of the bounding box.\r\n   */\r\n  public get left(): number {\r\n    return this._left;\r\n  }\r\n  public set left(value: number) {\r\n    this._left = value;\r\n  }\r\n\r\n  /**\r\n   * The top coordinate of the bounding box.\r\n   */\r\n  public get top(): number {\r\n    return this._top;\r\n  }\r\n  public set top(value: number) {\r\n    this._top = value;\r\n  }\r\n\r\n  /**\r\n   * The left coordinate of the bounding box.\r\n   */\r\n  public get right(): number {\r\n    return this._right;\r\n  }\r\n  public set right(value: number) {\r\n    this._right = value;\r\n  }\r\n\r\n  /**\r\n   * The left coordinate of the bounding box.\r\n   */\r\n  public get bottom(): number {\r\n    return this._bottom;\r\n  }\r\n  public set bottom(value: number) {\r\n    this._bottom = value;\r\n  }\r\n\r\n  /**\r\n   * The coefficient of restitution when the particles bounce off the\r\n   * sides of the box. A value of 1 gives a pure pure elastic collision, with no energy loss.\r\n   * A value between 0 and 1 causes the particle to loose enegy in the collision. A value\r\n   * greater than 1 causes the particle to gain energy in the collision.\r\n   */\r\n  public get bounce(): number {\r\n    return this._bounce;\r\n  }\r\n  public set bounce(value: number) {\r\n    this._bounce = value;\r\n  }\r\n\r\n  /**\r\n   * Tests whether the particle is at the edge of the box and, if so,\r\n   * adjusts its velocity to bounce in back towards the center of the\r\n   * box.\r\n   *\r\n   * <p>This method is called by the emitter and need not be called by the\r\n   * user</p>\r\n   *\r\n   * @param emitter The Emitter that created the particle.\r\n   * @param particle The particle to be updated.\r\n   * @param time The duration of the frame - used for time based updates.\r\n   *\r\n   * @see org.flintparticles.common.actions.Action#update()\r\n   */\r\n  public update(emitter: Emitter, particle: Particle, time: number): void {\r\n    const p: Particle = particle;\r\n    const radius = particle.collisionRadius;\r\n    let collide = false;\r\n    let position;\r\n    if (p.velX > 0 && (position = p.x + radius) >= this._right) {\r\n      p.velX = -p.velX * this._bounce;\r\n      p.x += 2 * (this._right - position);\r\n      collide = true;\r\n    } else if (p.velX < 0 && (position = p.x - radius) <= this._left) {\r\n      p.velX = -p.velX * this._bounce;\r\n      p.x += 2 * (this._left - position);\r\n      collide = true;\r\n    }\r\n    if (p.velY > 0 && (position = p.y + radius) >= this._bottom) {\r\n      p.velY = -p.velY * this._bounce;\r\n      p.y += 2 * (this._bottom - position);\r\n      collide = true;\r\n    } else if (p.velY < 0 && (position = p.y - radius) <= this._top) {\r\n      p.velY = -p.velY * this._bounce;\r\n      p.y += 2 * (this._top - position);\r\n      collide = true;\r\n    }\r\n\r\n    if (\r\n      collide &&\r\n      emitter.hasEventListener(ParticleEvents.BOUNDING_BOX_COLLISION)\r\n    ) {\r\n      const options = {\r\n        detail: {\r\n          particle: particle,\r\n          action: this,\r\n        },\r\n      };\r\n      emitter.dispatchEvent(\r\n        new CustomEvent(ParticleEvents.BOUNDING_BOX_COLLISION, options)\r\n      );\r\n    }\r\n  }\r\n}\r\n","import Emitter from \"../emitters/Emitter\";\r\nimport Particle from \"../particles/Particle2D\";\r\nimport Action from \"./Action\";\r\n\r\nexport default class Move extends Action {\r\n  constructor() {\r\n    super();\r\n    this.priority = -10;\r\n  }\r\n\r\n  /**\r\n   * Updates the particle's position based on its velocity and the period of\r\n   * time indicated.\r\n   *\r\n   * <p>This method is called by the emitter and need not be called by the\r\n   * user.</p>\r\n   *\r\n   * @param emitter The Emitter that created the particle.\r\n   * @param particle The particle to be updated.\r\n   * @param time The duration of the frame - used for time based updates.\r\n   *\r\n   * @see org.flintparticles.common.actions.Action#update()\r\n   */\r\n  public update(emitter: Emitter, particle: Particle, time: number): void {\r\n    particle.previousX = particle.x;\r\n    particle.previousY = particle.y;\r\n    particle.x += particle.velX * time;\r\n    particle.y += particle.velY * time;\r\n  }\r\n}\r\n","import Emitter from \"../emitters/Emitter\";\r\nimport Particle from \"../particles/Particle2D\";\r\nimport Action from \"./Action\";\r\n\r\nexport default class TurnTowardsPoint extends Action {\r\n  private _x: number;\r\n  private _y: number;\r\n  private _power: number;\r\n\r\n  /**\r\n   * The constructor creates a TurnTowardsPoint action for use by an emitter.\r\n   * To add a TurnTowardsPoint to all particles created by an emitter, use the\r\n   * emitter's addAction method.\r\n   *\r\n   * @see org.flintparticles.common.emitters.Emitter#addAction()\r\n   *\r\n   * @param power The strength of the turn action. Higher values produce a sharper turn.\r\n   * @param x The x coordinate of the point towards which the particle turns.\r\n   * @param y The y coordinate of the point towards which the particle turns.\r\n   */\r\n  constructor(x = 0, y = 0, power = 0) {\r\n    super();\r\n    this._power = power;\r\n    this._x = x;\r\n    this._y = y;\r\n  }\r\n\r\n  /**\r\n   * The strength of the turn action. Higher values produce a sharper turn.\r\n   */\r\n  public get power(): number {\r\n    return this._power;\r\n  }\r\n  public set power(value: number) {\r\n    this._power = value;\r\n  }\r\n\r\n  /**\r\n   * The x coordinate of the point that the particle turns towards.\r\n   */\r\n  public get x(): number {\r\n    return this._x;\r\n  }\r\n  public set x(value: number) {\r\n    this._x = value;\r\n  }\r\n\r\n  /**\r\n   * The y coordinate of the point that the particle turns towards.\r\n   */\r\n  public get y(): number {\r\n    return this._y;\r\n  }\r\n  public set y(value: number) {\r\n    this._y = value;\r\n  }\r\n\r\n  /**\r\n   * Calculates the direction to the focus point and turns the particle towards\r\n   * this direction.\r\n   *\r\n   * <p>This method is called by the emitter and need not be called by the\r\n   * user.</p>\r\n   *\r\n   * @param emitter The Emitter that created the particle.\r\n   * @param particle The particle to be updated.\r\n   * @param time The duration of the frame - used for time based updates.\r\n   *\r\n   * @see org.flintparticles.common.actions.Action#update()\r\n   */\r\n  public update(emitter: Emitter, particle: Particle, time: number): void {\r\n    const velLength = Math.sqrt(\r\n      particle.velX * particle.velX + particle.velY * particle.velY\r\n    );\r\n\r\n    if (velLength == 0) {\r\n        return;\r\n    }\r\n\r\n    const dx = particle.velX / velLength;\r\n    const dy = particle.velY / velLength;\r\n    const acc = this.power * time;\r\n    let targetX = this._x - particle.x;\r\n    let targetY = this._y - particle.y;\r\n    const len = Math.sqrt(targetX * targetX + targetY * targetY);\r\n    if (len === 0) {\r\n      return;\r\n    }\r\n    targetX /= len;\r\n    targetY /= len;\r\n    const dot = targetX * dx + targetY * dy;\r\n    const perpX = targetX - dx * dot;\r\n    const perpY = targetY - dy * dot;\r\n    let factor = acc / Math.sqrt(perpX * perpX + perpY * perpY);\r\n    particle.velX += perpX * factor;\r\n    particle.velY += perpY * factor;\r\n    factor =\r\n      velLength /\r\n      Math.sqrt(particle.velX * particle.velX + particle.velY * particle.velY);\r\n    particle.velX *= factor;\r\n    particle.velY *= factor;\r\n  }\r\n}\r\n","/**\r\n * The ZonedAction Action applies an action to the particle only if it is in\r\n * the specified zone.\r\n */\r\n\r\nimport Emitter from \"../emitters/Emitter\";\r\nimport Particle from \"../particles/Particle2D\";\r\nimport { Zone2D } from \"../zones/Zone2D\";\r\nimport Action from \"./Action\";\r\n\r\nexport default class ZonedAction extends Action {\r\n  private _action: Action;\r\n  private _zone: Zone2D;\r\n  private _invert: boolean;\r\n\r\n  /**\r\n   * The constructor creates a ZonedAction action for use by an emitter.\r\n   * To add a ZonedAction to all particles created by an emitter, use the\r\n   * emitter's addAction method.\r\n   *\r\n   * @see org.flintparticles.emitters.Emitter#addAction()\r\n   *\r\n   * @param action The action to apply when inside the zone.\r\n   * @param zone The zone in which to apply the action.\r\n   * @param invertZone If false (the default) the action is applied only to\r\n   * particles inside the zone. If true the action is applied only to\r\n   * particles outside the zone.\r\n   */\r\n  constructor(action: Action, zone: Zone2D, invertZone = false) {\r\n    super();\r\n    this._action = action;\r\n    this._zone = zone;\r\n    this._invert = invertZone;\r\n  }\r\n\r\n  /**\r\n   * The action to apply when inside the zone.\r\n   */\r\n  public get action(): Action {\r\n    return this._action;\r\n  }\r\n  public set action(value: Action) {\r\n    this._action = value;\r\n  }\r\n\r\n  /**\r\n   * The zone in which to apply the acceleration.\r\n   */\r\n  public get zone(): Zone2D {\r\n    return this._zone;\r\n  }\r\n  public set zone(value: Zone2D) {\r\n    this._zone = value;\r\n  }\r\n\r\n  /**\r\n   * If false (the default), the action is applied only to particles inside\r\n   * the zone. If true, the action is applied only to particles outside the zone.\r\n   */\r\n  public get invertZone(): boolean {\r\n    return this._invert;\r\n  }\r\n  public set invertZone(value: boolean) {\r\n    this._invert = value;\r\n  }\r\n\r\n  /**\r\n   * Provides acces to the priority of the action being used.\r\n   *\r\n   * @see org.flintparticles.common.actions.Action#getDefaultPriority()\r\n   */\r\n  public get priority(): number {\r\n    return this._action.priority;\r\n  }\r\n  public set priority(value: number) {\r\n    this._action.priority = value;\r\n  }\r\n\r\n  /**\r\n   * Calls the addedToEmitter method of the action being used.\r\n   *\r\n   * @param emitter The emitter this action has been added to.\r\n   *\r\n   * @see org.flintparticles.common.actions.Action#addedToEmitter()\r\n   */\r\n  public addedToEmitter(emitter: Emitter): void {\r\n    this._action.addedToEmitter(emitter);\r\n  }\r\n\r\n  /**\r\n   * Calls the removedFromEmitter method of the action being used.\r\n   *\r\n   * @param emitter The emitter this action has been added to.\r\n   *\r\n   * @see org.flintparticles.common.actions.Action#removedFromEmitter()\r\n   */\r\n  public removedFromEmitter(emitter: Emitter): void {\r\n    this._action.removedFromEmitter(emitter);\r\n  }\r\n\r\n  /**\r\n   * Checks if the particle is in the zone and if so calls the update\r\n   * method of the action being used.\r\n   *\r\n   * <p>This method is called by the emitter and need not be called by the\r\n   * user.</p>\r\n   *\r\n   * @param emitter The Emitter that created the particle.\r\n   * @param particle The particle to be updated.\r\n   * @param time The duration of the frame - used for time based updates.\r\n   *\r\n   * @see org.flintparticles.common.actions.Action#update()\r\n   */\r\n  public update(emitter: Emitter, particle: Particle, time: number): void {\r\n    if (this._zone.contains(particle.x, particle.y)) {\r\n      if (!this._invert) {\r\n        this._action.update(emitter, particle, time);\r\n      }\r\n    } else {\r\n      if (this._invert) {\r\n        this._action.update(emitter, particle, time);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Emitter from \"../emitters/Emitter\";\r\nimport Counter from \"./Counter\";\r\n\r\nexport default class ZeroCounter implements Counter {\r\n  /**\r\n   * Returns 0 to indicate that the emitter should emit no particles when it\r\n   * starts.\r\n   *\r\n   * <p>This method is called within the emitter's start method\r\n   * and need not be called by the user.</p>\r\n   *\r\n   * @param emitter The emitter.\r\n   * @return 0\r\n   *\r\n   * @see org.flintparticles.common.counters.Counter#startEmitter()\r\n   */\r\n  public startEmitter(emitter: Emitter): number {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Returns 0 to indicate that the emitter should emit no particles.\r\n   *\r\n   * <p>This method is called within the emitter's update loop and need not\r\n   * be called by the user.</p>\r\n   *\r\n   * @param emitter The emitter.\r\n   * @param time The time, in seconds, since the previous call to this method.\r\n   * @return 0\r\n   *\r\n   * @see org.flintparticles.common.counters.Counter#updateEmitter()\r\n   */\r\n  public updateEmitter(emitter: Emitter, time: number): number {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Does nothing\r\n   */\r\n  public stop(): void {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Does nothing\r\n   */\r\n  public resume(): void {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Indicates if the counter has emitted all its particles. For the ZeroCounter\r\n   * this will always be true.\r\n   */\r\n  public get complete(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Indicates if the counter is currently emitting particles\r\n   */\r\n  public get running(): boolean {\r\n    return false;\r\n  }\r\n}\r\n","/*\r\n * FLINT PARTICLE SYSTEM\r\n * .....................\r\n *\r\n * Author: Richard Lord\r\n * Copyright (c) Richard Lord 2008-2011\r\n * http://flintparticles.org\r\n *\r\n */\r\n\r\nimport Action from \"../actions/Action\";\r\nimport Counter from \"../counters/Counter\";\r\nimport ZeroCounter from \"../counters/ZeroCounter\";\r\nimport Particle2D from \"../particles/Particle2D\";\r\n\r\nexport default class Emitter {\r\n  protected _counter: Counter = new ZeroCounter();\r\n  protected _actions: Array<Action> = [];\r\n  protected _particles: Array<Particle2D> = [];\r\n\r\n  protected _maximumFrameTime = 0.1;\r\n\r\n  protected _running = false;\r\n\r\n  private _eventTypes: { [key: string]: number } = {};\r\n  private _eventDispatcher: HTMLElement;\r\n\r\n  constructor() {\r\n    this._eventDispatcher = document.createElement(\"div\");\r\n  }\r\n\r\n  public addEventListener(\r\n    type: string,\r\n    callback: EventListenerOrEventListenerObject\r\n  ): void {\r\n    this._eventTypes[type] = this._eventTypes[type]\r\n      ? this._eventTypes[type] + 1\r\n      : 1;\r\n    this._eventDispatcher.addEventListener(type, callback);\r\n  }\r\n\r\n  public removeEventListener(\r\n    type: string,\r\n    callback: EventListenerOrEventListenerObject\r\n  ): void {\r\n    this._eventTypes[type] =\r\n      this._eventTypes[type] && this._eventTypes[type] > 1\r\n        ? this._eventTypes[type] - 1\r\n        : 0;\r\n    this._eventDispatcher.removeEventListener(type, callback);\r\n  }\r\n\r\n  public hasEventListener(type: string): boolean {\r\n    return !!this._eventTypes[type];\r\n  }\r\n\r\n  public dispatchEvent(event: CustomEvent): void {\r\n    this._eventDispatcher.dispatchEvent(event);\r\n  }\r\n\r\n  public get counter(): Counter {\r\n    return this._counter;\r\n  }\r\n  public set counter(value: Counter) {\r\n    this._counter = value;\r\n    if (this._running) {\r\n      this._counter.startEmitter(this);\r\n    }\r\n  }\r\n\r\n  public get actions(): Array<Action> {\r\n    return this._actions;\r\n  }\r\n  public set actions(value: Array<Action>) {\r\n    while (this._actions.length) {\r\n      this._actions.pop()?.removedFromEmitter(this);\r\n    }\r\n\r\n    this._actions = value.slice();\r\n    this._actions.sort(this.prioritySort);\r\n\r\n    this._actions.forEach((action: Action) => {\r\n      action.addedToEmitter(this);\r\n    });\r\n  }\r\n\r\n  public addAction(action: Action): void {\r\n    const len = this._actions.length;\r\n    let i = 0;\r\n    for (i = 0; i < len; ++i) {\r\n      if (this._actions[i].priority < action.priority) {\r\n        break;\r\n      }\r\n    }\r\n    this._actions.splice(i, 0, action);\r\n    action.addedToEmitter(this);\r\n  }\r\n\r\n  /**\r\n   * Removes an Action from the Emitter.\r\n   *\r\n   * @param action The Action to remove\r\n   *\r\n   * @see addAction()\r\n   */\r\n  public removeAction(action: Action): void {\r\n    const index = this._actions.indexOf(action);\r\n    if (index !== -1) {\r\n      this._actions.splice(index, 1);\r\n      action.removedFromEmitter(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Detects if the emitter is using a particular action or not.\r\n   *\r\n   * @param action The action to look for.\r\n   *\r\n   * @return true if the action is being used by the emitter, false\r\n   * otherwise.\r\n   */\r\n  public hasAction(action: Action): boolean {\r\n    return this._actions.indexOf(action) !== -1;\r\n  }\r\n\r\n  public get particles(): Array<Particle2D> {\r\n    return this._particles;\r\n  }\r\n\r\n  public set particles(value: Array<Particle2D>) {\r\n    this.killAllParticles();\r\n    this.addParticles(value);\r\n  }\r\n\r\n  public addParticle(particle: Particle2D): void {\r\n    this._particles.push(particle);\r\n  }\r\n\r\n  public addParticles(particles: Array<Particle2D>): void {\r\n    this._particles.splice(this._particles.length, 0, ...particles);\r\n  }\r\n\r\n  public removeParticle(particle: Particle2D): boolean {\r\n    const index = this._particles.indexOf(particle);\r\n    if (index !== -1) {\r\n      this._particles.splice(index, 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public removeParticles(particles: Array<Particle2D>): void {\r\n    for (let i = 0; i < particles.length; i++) {\r\n      this.removeParticle(particles[i]);\r\n    }\r\n  }\r\n\r\n  public killAllParticles(): void {\r\n    this._particles.splice(0);\r\n  }\r\n\r\n  private prioritySort(b1: Action, b2: Action): number {\r\n    return b1.priority - b2.priority;\r\n  }\r\n\r\n  public update(time: number): void {\r\n    if (time > this._maximumFrameTime) {\r\n      time = this._maximumFrameTime;\r\n    }\r\n\r\n    // sortParticle2Ds();\r\n\r\n    if (this._particles.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // update particle state\r\n    for (let j = 0; j < this._actions.length; j++) {\r\n      for (let i = 0; i < this._particles.length; i++) {\r\n        this._actions[j].update(this, this._particles[i], time);\r\n      }\r\n    }\r\n\r\n    // remove dead particles\r\n    const length = this._particles.length;\r\n    for (let i = length; i--; ) {\r\n      const particle: Particle2D = this._particles[i];\r\n      if (particle.isDead) {\r\n        this._particles.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Particle from \"../particles/Particle2D\";\r\nimport { Point, Zone2D } from \"./Zone2D\";\r\n\r\nexport default class RectangleZone implements Zone2D {\r\n  private _left: number;\r\n  private _top: number;\r\n  private _right: number;\r\n  private _bottom: number;\r\n  private _width: number;\r\n  private _height: number;\r\n\r\n  /**\r\n   * The constructor creates a RectangleZone zone.\r\n   *\r\n   * @param left The left coordinate of the rectangle defining the region of the zone.\r\n   * @param top The top coordinate of the rectangle defining the region of the zone.\r\n   * @param right The right coordinate of the rectangle defining the region of the zone.\r\n   * @param bottom The bottom coordinate of the rectangle defining the region of the zone.\r\n   */\r\n  constructor(left = 0, top = 0, right = 0, bottom = 0) {\r\n    this._left = left;\r\n    this._top = top;\r\n    this._right = right;\r\n    this._bottom = bottom;\r\n    this._width = right - left;\r\n    this._height = bottom - top;\r\n  }\r\n\r\n  /**\r\n   * The left coordinate of the rectangle defining the region of the zone.\r\n   */\r\n  public get left(): number {\r\n    return this._left;\r\n  }\r\n\r\n  public set left(value: number) {\r\n    this._left = value;\r\n    if (!isNaN(this._right) && !isNaN(this._left)) {\r\n      this._width = this.right - this.left;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The right coordinate of the rectangle defining the region of the zone.\r\n   */\r\n  public get right(): number {\r\n    return this._right;\r\n  }\r\n\r\n  public set right(value: number) {\r\n    this._right = value;\r\n    if (!isNaN(this._right) && !isNaN(this._left)) {\r\n      this._width = this.right - this.left;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The top coordinate of the rectangle defining the region of the zone.\r\n   */\r\n  public get top(): number {\r\n    return this._top;\r\n  }\r\n\r\n  public set top(value: number) {\r\n    this._top = value;\r\n    if (!isNaN(this._top) && !isNaN(this._bottom)) {\r\n      this._height = this.bottom - this.top;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The bottom coordinate of the rectangle defining the region of the zone.\r\n   */\r\n  public get bottom(): number {\r\n    return this._bottom;\r\n  }\r\n\r\n  public set bottom(value: number) {\r\n    this._bottom = value;\r\n    if (!isNaN(this._top) && !isNaN(this._bottom)) {\r\n      this._height = this.bottom - this.top;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The contains method determines whether a point is inside the zone.\r\n   * This method is used by the initializers and actions that\r\n   * use the zone. Usually, it need not be called directly by the user.\r\n   *\r\n   * @param x The x coordinate of the location to test for.\r\n   * @param y The y coordinate of the location to test for.\r\n   * @return true if point is inside the zone, false if it is outside.\r\n   */\r\n  public contains(x: number, y: number): boolean {\r\n    return (\r\n      x >= this._left && x <= this._right && y >= this._top && y <= this._bottom\r\n    );\r\n  }\r\n\r\n  /**\r\n   * The getLocation method returns a random point inside the zone.\r\n   * This method is used by the initializers and actions that\r\n   * use the zone. Usually, it need not be called directly by the user.\r\n   *\r\n   * @return a random point inside the zone.\r\n   */\r\n  public getLocation(): Point {\r\n    return {\r\n      x: this._left + Math.random() * this._width,\r\n      y: this._top + Math.random() * this._height,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The getArea method returns the size of the zone.\r\n   * This method is used by the MultiZone class. Usually,\r\n   * it need not be called directly by the user.\r\n   *\r\n   * @return a random point inside the zone.\r\n   */\r\n  public getArea(): number {\r\n    return this._width * this._height;\r\n  }\r\n\r\n  /**\r\n   * Manages collisions between a particle and the zone. Particles will collide with the edges\r\n   * of the rectangle defined for this zone, from inside or outside the zone. The collisionRadius\r\n   * of the particle is used when calculating the collision.\r\n   *\r\n   * @param particle The particle to be tested for collision with the zone.\r\n   * @param bounce The coefficient of restitution for the collision.\r\n   *\r\n   * @return Whether a collision occured.\r\n   */\r\n  public collideParticle(particle: Particle, bounce = 1): boolean {\r\n    let position: number;\r\n    let previousPosition: number;\r\n    let intersect: number;\r\n    let collision = false;\r\n\r\n    if (particle.velX > 0) {\r\n      position = particle.x + particle.collisionRadius;\r\n      previousPosition = particle.previousX + particle.collisionRadius;\r\n      if (previousPosition < this._left && position >= this._left) {\r\n        intersect =\r\n          particle.previousY +\r\n          ((particle.y - particle.previousY) *\r\n            (this._left - previousPosition)) /\r\n            (position - previousPosition);\r\n        if (\r\n          intersect >= this._top - particle.collisionRadius &&\r\n          intersect <= this._bottom + particle.collisionRadius\r\n        ) {\r\n          particle.velX = -particle.velX * bounce;\r\n          particle.x += 2 * (this._left - position);\r\n          collision = true;\r\n        }\r\n      } else if (previousPosition <= this._right && position > this._right) {\r\n        intersect =\r\n          particle.previousY +\r\n          ((particle.y - particle.previousY) *\r\n            (this._right - previousPosition)) /\r\n            (position - previousPosition);\r\n        if (\r\n          intersect >= this._top - particle.collisionRadius &&\r\n          intersect <= this._bottom + particle.collisionRadius\r\n        ) {\r\n          particle.velX = -particle.velX * bounce;\r\n          particle.x += 2 * (this._right - position);\r\n          collision = true;\r\n        }\r\n      }\r\n    } else if (particle.velX < 0) {\r\n      position = particle.x - particle.collisionRadius;\r\n      previousPosition = particle.previousX - particle.collisionRadius;\r\n      if (previousPosition > this._right && position <= this._right) {\r\n        intersect =\r\n          particle.previousY +\r\n          ((particle.y - particle.previousY) *\r\n            (this._right - previousPosition)) /\r\n            (position - previousPosition);\r\n        if (\r\n          intersect >= this._top - particle.collisionRadius &&\r\n          intersect <= this._bottom + particle.collisionRadius\r\n        ) {\r\n          particle.velX = -particle.velX * bounce;\r\n          particle.x += 2 * (this._right - position);\r\n          collision = true;\r\n        }\r\n      } else if (previousPosition >= this._left && position < this._left) {\r\n        intersect =\r\n          particle.previousY +\r\n          ((particle.y - particle.previousY) *\r\n            (this._left - previousPosition)) /\r\n            (position - previousPosition);\r\n        if (\r\n          intersect >= this._top - particle.collisionRadius &&\r\n          intersect <= this._bottom + particle.collisionRadius\r\n        ) {\r\n          particle.velX = -particle.velX * bounce;\r\n          particle.x += 2 * (this._left - position);\r\n          collision = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (particle.velY > 0) {\r\n      position = particle.y + particle.collisionRadius;\r\n      previousPosition = particle.previousY + particle.collisionRadius;\r\n      if (previousPosition < this._top && position >= this._top) {\r\n        intersect =\r\n          particle.previousX +\r\n          ((particle.x - particle.previousX) * (this._top - previousPosition)) /\r\n            (position - previousPosition);\r\n        if (\r\n          intersect >= this._left - particle.collisionRadius &&\r\n          intersect <= this._right + particle.collisionRadius\r\n        ) {\r\n          particle.velY = -particle.velY * bounce;\r\n          particle.y += 2 * (this._top - position);\r\n          collision = true;\r\n        }\r\n      } else if (previousPosition <= this._bottom && position > this._bottom) {\r\n        intersect =\r\n          particle.previousX +\r\n          ((particle.x - particle.previousX) *\r\n            (this._bottom - previousPosition)) /\r\n            (position - previousPosition);\r\n        if (\r\n          intersect >= this._left - particle.collisionRadius &&\r\n          intersect <= this._right + particle.collisionRadius\r\n        ) {\r\n          particle.velY = -particle.velY * bounce;\r\n          particle.y += 2 * (this._bottom - position);\r\n          collision = true;\r\n        }\r\n      }\r\n    } else if (particle.velY < 0) {\r\n      position = particle.y - particle.collisionRadius;\r\n      previousPosition = particle.previousY - particle.collisionRadius;\r\n      if (previousPosition > this._bottom && position <= this._bottom) {\r\n        intersect =\r\n          particle.previousX +\r\n          ((particle.x - particle.previousX) *\r\n            (this._bottom - previousPosition)) /\r\n            (position - previousPosition);\r\n        if (\r\n          intersect >= this._left - particle.collisionRadius &&\r\n          intersect <= this._right + particle.collisionRadius\r\n        ) {\r\n          particle.velY = -particle.velY * bounce;\r\n          particle.y += 2 * (this._bottom - position);\r\n          collision = true;\r\n        }\r\n      } else if (previousPosition >= this._top && position < this._top) {\r\n        intersect =\r\n          particle.previousX +\r\n          ((particle.x - particle.previousX) * (this._top - previousPosition)) /\r\n            (position - previousPosition);\r\n        if (\r\n          intersect >= this._left - particle.collisionRadius &&\r\n          intersect <= this._right + particle.collisionRadius\r\n        ) {\r\n          particle.velY = -particle.velY * bounce;\r\n          particle.y += 2 * (this._top - position);\r\n          collision = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return collision;\r\n  }\r\n}\r\n","/* eslint-disable no-bitwise */\r\nconst WORD_SIZE = 32;\r\n\r\nexport class KeyPoll {\r\n  private keys:Int32Array = new Int32Array(4);\r\n\r\n  public constructor() {\r\n    window.addEventListener('keyup', this.keyUpHandler);\r\n    window.addEventListener('keydown', this.keyDownHandler);\r\n  }\r\n\r\n  public isDown(key:number):boolean {\r\n    const i = Math.floor(key / WORD_SIZE);\r\n    return (this.keys[i] & (1 << key - i * WORD_SIZE)) !== 0;\r\n  }\r\n\r\n  public isUp(key:number):boolean {\r\n    return !this.isDown(key);\r\n  }\r\n\r\n  private keyDownHandler = (event:KeyboardEvent):void => {\r\n    const { keyCode } = event;\r\n    const index = Math.floor(keyCode / WORD_SIZE);\r\n    this.keys[index] |= (1 << keyCode - index * WORD_SIZE);\r\n  };\r\n\r\n  private keyUpHandler = (event:KeyboardEvent):void => {\r\n    const { keyCode } = event;\r\n    const index = Math.floor(keyCode / WORD_SIZE);\r\n    this.keys[index] &= ~(1 << keyCode - index * WORD_SIZE);\r\n  };\r\n}\r\n","export const NUMBER_0 = 48;\r\nexport const NUMBER_1 = 49;\r\nexport const NUMBER_2 = 50;\r\nexport const NUMBER_3 = 51;\r\nexport const NUMBER_4 = 52;\r\nexport const NUMBER_5 = 53;\r\nexport const NUMBER_6 = 54;\r\nexport const NUMBER_7 = 55;\r\nexport const NUMBER_8 = 56;\r\nexport const NUMBER_9 = 57;\r\nexport const A = 65;\r\nexport const B = 66;\r\nexport const C = 67;\r\nexport const D = 68;\r\nexport const E = 69;\r\nexport const F = 70;\r\nexport const G = 71;\r\nexport const H = 72;\r\nexport const I = 73;\r\nexport const J = 74;\r\nexport const K = 75;\r\nexport const L = 76;\r\nexport const M = 77;\r\nexport const N = 78;\r\nexport const O = 79;\r\nexport const P = 80;\r\nexport const Q = 81;\r\nexport const R = 82;\r\nexport const S = 83;\r\nexport const T = 84;\r\nexport const U = 85;\r\nexport const V = 86;\r\nexport const W = 87;\r\nexport const X = 88;\r\nexport const Y = 89;\r\nexport const Z = 90;\r\nexport const NUMPAD_0 = 96;\r\nexport const NUMPAD_1 = 97;\r\nexport const NUMPAD_2 = 98;\r\nexport const NUMPAD_3 = 99;\r\nexport const NUMPAD_4 = 100;\r\nexport const NUMPAD_5 = 101;\r\nexport const NUMPAD_6 = 102;\r\nexport const NUMPAD_7 = 103;\r\nexport const NUMPAD_8 = 104;\r\nexport const NUMPAD_9 = 105;\r\nexport const NUMPAD_MULTIPLY = 106;\r\nexport const NUMPAD_ADD = 107;\r\nexport const NUMPAD_ENTER = 108;\r\nexport const NUMPAD_SUBTRACT = 109;\r\nexport const NUMPAD_DECIMAL = 110;\r\nexport const NUMPAD_DIVIDE = 111;\r\nexport const F1 = 112;\r\nexport const F2 = 113;\r\nexport const F3 = 114;\r\nexport const F4 = 115;\r\nexport const F5 = 116;\r\nexport const F6 = 117;\r\nexport const F7 = 118;\r\nexport const F8 = 119;\r\nexport const F9 = 120;\r\nexport const F10 = 121; //  F10 is used by browser\r\nexport const F11 = 122;\r\nexport const F12 = 123;\r\nexport const F13 = 124;\r\nexport const F14 = 125;\r\nexport const F15 = 126;\r\nexport const BACKSPACE = 8;\r\nexport const TAB = 9;\r\nexport const ALTERNATE = 18;\r\nexport const ENTER = 13;\r\nexport const COMMAND = 15;\r\nexport const SHIFT = 16;\r\nexport const CONTROL = 17;\r\nexport const BREAK = 19;\r\nexport const CAPS_LOCK = 20;\r\nexport const NUMPAD = 21;\r\nexport const ESCAPE = 27;\r\nexport const SPACE = 32;\r\nexport const PAGE_UP = 33;\r\nexport const PAGE_DOWN = 34;\r\nexport const END = 35;\r\nexport const HOME = 36;\r\nexport const LEFT = 37;\r\nexport const RIGHT = 39;\r\nexport const UP = 38;\r\nexport const DOWN = 40;\r\nexport const INSERT = 45;\r\nexport const DELETE = 46;\r\nexport const NUMLOCK = 144;\r\nexport const SEMICOLON = 186;\r\nexport const EQUAL = 187;\r\nexport const COMMA = 188;\r\nexport const MINUS = 189;\r\nexport const PERIOD = 190;\r\nexport const SLASH = 191;\r\nexport const BACKQUOTE = 192;\r\nexport const LEFTBRACKET = 219;\r\nexport const BACKSLASH = 220;\r\nexport const RIGHTBRACKET = 221;\r\nexport const QUOTE = 222;\r\n","/**\r\n * The Particle class is a set of public properties shared by all particles.\r\n * It is deliberately lightweight, with only one method. The Initializers\r\n * and Actions modify these properties directly. This means that the same\r\n * particles can be used in many different emitters, allowing Particle\r\n * objects to be reused.\r\n *\r\n * Particles are usually created by the ParticleCreator class. This class\r\n * just simplifies the reuse of Particle objects which speeds up the\r\n * application.\r\n */\r\nexport default class Particle {\r\n  /**\r\n   * The 32bit ARGB color of the particle. The initial value is 0xFFFFFFFF (white).\r\n   */\r\n  public color = \"#ffffff\";\r\n\r\n  //  private _colorTransform:ColorTransform = null;\r\n  private _previousColor: string;\r\n\r\n  /**\r\n   * The scale of the particle ( 1 is normal size ).\r\n   */\r\n  public scale = 1;\r\n\r\n  /**\r\n   * The mass of the particle ( 1 is the default ).\r\n   */\r\n  public mass = 1;\r\n\r\n  /**\r\n   * The radius of the particle, for collision approximation\r\n   */\r\n  public collisionRadius = 1;\r\n\r\n  /**\r\n   * The object used to display the image. In a 2D particle, this is usually\r\n   * a DisplayObject. In a 3D particle, this may be a DisplayObject, for\r\n   * displaying on a billboard or similar, or a 3D object in the form used\r\n   * by the render system.\r\n   */\r\n  //  public image:* = null;\r\n\r\n  /**\r\n   * The lifetime of the particle, in seconds.\r\n   */\r\n  public lifetime = 0;\r\n  /**\r\n   * The age of the particle, in seconds.\r\n   */\r\n  public age = 0;\r\n  /**\r\n   * The energy of the particle.\r\n   */\r\n  public energy = 1;\r\n\r\n  /**\r\n   * Whether the particle is dead and should be removed from the stage.\r\n   */\r\n  public isDead = false;\r\n\r\n  /**\r\n   * The dictionary object enables actions and activities to add additional properties to the particle.\r\n   * Any object adding properties to the particle should use a reference to itself as the dictionary\r\n   * key, thus ensuring it doesn't clash with other object's properties. If multiple properties are\r\n   * needed, the dictionary value can be an object with a number of properties.\r\n   */\r\n  //  public get dictionary(): Dictionary\r\n  //  {\r\n  //      if( _dictionary == null )\r\n  //      {\r\n  //          _dictionary = new Dictionary( true );\r\n  //      }\r\n  //      return _dictionary;\r\n  //  }\r\n  //  private _dictionary:Dictionary = null;\r\n\r\n  /**\r\n   * Creates a particle. Alternatively particles can be reused by using the ParticleCreator to create\r\n   * and manage them. Usually the emitter will create the particles and the user doesn't need\r\n   * to create them.\r\n   */\r\n  constructor() {\r\n    this._previousColor = this.color;\r\n  }\r\n\r\n  /**\r\n   * Sets the particle's properties to their default values.\r\n   */\r\n  public initialize(): void {\r\n    this.color = \"#ffffff\";\r\n    this.scale = 1;\r\n    this.mass = 1;\r\n    this.collisionRadius = 1;\r\n    this.lifetime = 0;\r\n    this.age = 0;\r\n    this.energy = 1;\r\n    this.isDead = false;\r\n\r\n    //  image = null;\r\n    //  _dictionary = null;\r\n    //  _colorTransform = null;\r\n  }\r\n\r\n  /**\r\n   * A ColorTransform object that converts white to the colour of the particle.\r\n   */\r\n  //  public get colorTransform():ColorTransform\r\n  //  {\r\n  //      if( !_colorTransform || _previousColor != color )\r\n  //      {\r\n  //          _colorTransform = new ColorTransform( ( ( color >>> 16 ) & 255 ) / 255,\r\n  //                                 ( ( color >>> 8 ) & 255 ) / 255,\r\n  //                                 ( ( color ) & 255 ) / 255,\r\n  //                                 ( ( color >>> 24 ) & 255 ) / 255,\r\n  //                                 0,0,0,0 );\r\n  //          _previousColor = color;\r\n  //      }\r\n  //      return _colorTransform;\r\n  //  }\r\n\r\n  // public get alpha(): number {\r\n  //     return ((this.color & 0xFF000000) >>> 24) / 255;\r\n  // }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  protected cloneInto(p: Particle): Particle {\r\n    p.color = this.color;\r\n    p.scale = this.scale;\r\n    p.mass = this.mass;\r\n    p.collisionRadius = this.collisionRadius;\r\n    p.lifetime = this.lifetime;\r\n    p.age = this.age;\r\n    p.energy = this.energy;\r\n    p.isDead = this.isDead;\r\n    //  p.image = image;\r\n    //  if( _dictionary )\r\n    //  {\r\n    //      p._dictionary = new Dictionary( true );\r\n    //      for( key:Object in _dictionary )\r\n    //      {\r\n    //          p._dictionary[ key ] = _dictionary[ key ];\r\n    //      }\r\n    //  }\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * Creates a new particle with all the same properties as this one.\r\n   *\r\n   * <p>Note that the new particle will use the same image object as the one you're cloning.\r\n   * This is fine if the particles are used with a Bitmaprenderer, but if they are used with a\r\n   * DisplayObjectRenderer you will need to replace teh image property with a new image, otherwise\r\n   * only one of the particles (original or clone) will be displayed.</p>\r\n   */\r\n  public clone(): Particle {\r\n    return this.cloneInto(new Particle());\r\n  }\r\n\r\n  public revive(): void {\r\n    this.lifetime = 0;\r\n    this.age = 0;\r\n    this.energy = 1;\r\n    this.isDead = false;\r\n  }\r\n}\r\n","import Particle from \"./Particle\";\r\n\r\nexport default class Particle2D extends Particle {\r\n  public x = 0;\r\n  public y = 0;\r\n  public previousX = 0;\r\n  public previousY = 0;\r\n  public velX = 0;\r\n  public velY = 0;\r\n  public rotation = 0;\r\n  public angVelocity = 0;\r\n\r\n  /**\r\n   * The position in the emitter's horizontal spacial sorted array\r\n   */\r\n  public sortID = -1;\r\n\r\n  private _previousMass = 0;\r\n  private _previousRadius = 0;\r\n  private _inertia = 0;\r\n\r\n  /**\r\n   * The moment of inertia of the particle about its center point\r\n   */\r\n  public get inertia(): number {\r\n    if (\r\n      this.mass !== this._previousMass ||\r\n      this.collisionRadius !== this._previousRadius\r\n    ) {\r\n      this._inertia =\r\n        this.mass * this.collisionRadius * this.collisionRadius * 0.5;\r\n      this._previousMass = this.mass;\r\n      this._previousRadius = this.collisionRadius;\r\n    }\r\n    return this._inertia;\r\n  }\r\n}\r\n","import Particle2D from \"@/vendors/particles/particles/Particle2D\";\r\nimport { ReplicatedUser } from \"../storage/GlobalStorage\";\r\n\r\nexport default class CustomParticle extends Particle2D {\r\n  constructor(public user: ReplicatedUser) {\r\n    super();\r\n  }\r\n}\r\n","import Action from \"../../vendors/particles/actions/Action\";\r\nimport Emitter from \"../../vendors/particles/emitters/Emitter\";\r\nimport Particle2D from \"../../vendors/particles/particles/Particle2D\";\r\nimport CustomParticle from \"./CustomParticle\";\r\n\r\nexport default class UpdateUserPositionAction extends Action {\r\n  public update(emitter: Emitter, particle: Particle2D, time: number): void {\r\n    (particle as CustomParticle).user.x = particle.x;\r\n    (particle as CustomParticle).user.y = particle.y;\r\n  }\r\n}\r\n","import ActionCallback from \"@/vendors/particles/actions/ActionCallback\";\r\nimport BoundingBox from \"@/vendors/particles/actions/BoundingBox\";\r\nimport Move from \"@/vendors/particles/actions/Move\";\r\nimport TurnTowardsPoint from \"@/vendors/particles/actions/TurnTowardsPoint\";\r\nimport ZonedAction from \"@/vendors/particles/actions/ZonedAction\";\r\nimport Emitter from \"@/vendors/particles/emitters/Emitter\";\r\nimport RectangleZone from \"@/vendors/particles/zones/RectangleZone\";\r\nimport { Point } from \"pixi.js\";\r\nimport EventManager from \"../events/EventManager\";\r\nimport { EventType } from \"../events/EventType\";\r\nimport { KeyPoll } from \"../KeyPoll\";\r\nimport * as Keyboard from \"../Keyboard\";\r\nimport GlobalStorage, { AnimateMapConfig, ReplicatedUser } from \"../storage/GlobalStorage\";\r\nimport CustomParticle from \"./CustomParticle\";\r\nimport UpdateUserPositionAction from \"./UpdateUserPositionAction\";\r\n\r\nexport default class Movements {\r\n    private hero: ReplicatedUser | null = null;\r\n    private heroParticle: CustomParticle | null = null;\r\n    private heroEmitter: Emitter | null = null;\r\n\r\n    private pointed = false;\r\n    private keyboarded = false;\r\n    private destinationZone: RectangleZone | null = null;\r\n    private turnTowardsPoint: TurnTowardsPoint | null = null;\r\n    private zonedAction: ZonedAction | null = null;\r\n\r\n    private heroSpeedSqLimitByZoom: Array<number> = [100, 1000, 10000];\r\n\r\n    private mainEmitter: Emitter = new Emitter();\r\n    private emitters: Array<Emitter> = [];\r\n\r\n    private keyPoll: KeyPoll = new KeyPoll();\r\n\r\n    constructor() {\r\n        this.setupMainEmitter();\r\n        this.setupHeroParticle();\r\n        this.setupEventManager();\r\n        this.createHeroControlModule();\r\n    }\r\n\r\n    public update(time: number): void {\r\n        if (!this.hero) {\r\n            return;\r\n        }\r\n\r\n        this.moveHeroTo();\r\n\r\n        for (let i = 0; i < this.emitters.length; i++) {\r\n            this.emitters[i].update(time);\r\n        }\r\n    }\r\n\r\n    private setupEventManager(): void {\r\n        EventManager.on(EventType.UPDATE_CAMERA_ZOOM, this._onUpdateZoom, this);\r\n    }\r\n\r\n    private _onUpdateZoom(): void {\r\n        if (!this.heroParticle || (this.heroParticle.velX === 0 && this.heroParticle.velY === 0)) {\r\n            return;\r\n        }\r\n        const particle: CustomParticle = this.heroParticle;\r\n        const speed = Math.sqrt(particle.velX * particle.velX + particle.velY * particle.velY);\r\n        const speedLimit = this.getSpeedLimit();\r\n        if (speed != speedLimit) {\r\n            const scale = speedLimit / speed;\r\n            particle.velX *= scale;\r\n            particle.velY *= scale;\r\n        }\r\n    }\r\n\r\n    private getSpeedLimit(): number {\r\n        const zoom = GlobalStorage.get(\"zoom\");\r\n        const _limitSq = this.heroSpeedSqLimitByZoom[zoom];\r\n        return Math.sqrt(_limitSq);\r\n    }\r\n\r\n    private setupMainEmitter(): void {\r\n        const emitter: Emitter = this.mainEmitter;\r\n        emitter.actions = [\r\n            new Move(),\r\n            //   new SpeedLimit(this.WALKER_DEFAULT_SPEED, false),\r\n            new BoundingBox(\r\n                10,\r\n                10,\r\n                GlobalStorage.get(\"worldWidth\") - 10,\r\n                GlobalStorage.get(\"worldHeight\") - 10\r\n            ),\r\n            new UpdateUserPositionAction()\r\n        ];\r\n        this.emitters.push(emitter);\r\n    }\r\n\r\n    private setupHeroParticle(): void {\r\n        this.hero = GlobalStorage.get('hero');\r\n        this.heroParticle = new CustomParticle(this.hero!);\r\n        this.heroParticle.x = this.hero!.x;\r\n        this.heroParticle.y = this.hero!.y;\r\n\r\n        this.heroParticle.velX = 10;\r\n        this.heroParticle.velY = 10;\r\n\r\n        this.mainEmitter.addParticle(this.heroParticle);\r\n    }\r\n\r\n    private pointHeroTo(e): void {\r\n        if (!this.heroParticle || !this.heroEmitter) {\r\n            return;\r\n        }\r\n\r\n        this.pointed = true;\r\n        this.keyboarded = !this.pointed;\r\n\r\n        if (!this.turnTowardsPoint) {\r\n            this.turnTowardsPoint = new TurnTowardsPoint();\r\n            this.turnTowardsPoint.power = 100;\r\n            this.heroEmitter.addAction(this.turnTowardsPoint);\r\n        }\r\n        this.turnTowardsPoint.x = e.x;\r\n        this.turnTowardsPoint.y = e.y;\r\n\r\n        let dx = e.x - this.heroParticle.x;\r\n        let dy = e.y - this.heroParticle.y;\r\n        const length = Math.sqrt(dx * dx + dy * dy);\r\n        dx /= length;\r\n        dy /= length;\r\n        const limit = this.getSpeedLimit();\r\n        this.heroParticle.velX = dx * limit;\r\n        this.heroParticle.velY = dy * limit;\r\n\r\n        if (!this.destinationZone) {\r\n            this.destinationZone = new RectangleZone();\r\n\r\n            this.zonedAction = new ZonedAction(\r\n                new ActionCallback(() => {\r\n                    this.pointHeroToStop();\r\n                    if (this.heroParticle) {\r\n                        this.heroParticle.velX = 0;\r\n                        this.heroParticle.velY = 0;    \r\n                    }\r\n                }, false), this.destinationZone\r\n            )\r\n            this.heroEmitter.addAction(this.zonedAction);\r\n        }\r\n\r\n        const precision = 10;\r\n        this.destinationZone.left = e.x - precision;\r\n        this.destinationZone.top = e.y - precision;\r\n        this.destinationZone.right = e.x + precision;\r\n        this.destinationZone.bottom = e.y + precision;\r\n    }\r\n\r\n    private moveHeroTo(): void {\r\n        const zoom = GlobalStorage.get('zoom');\r\n        const speed = Math.sqrt(this.heroSpeedSqLimitByZoom[zoom]);\r\n\r\n        let down = false;\r\n        if (!this.heroParticle || !this.heroEmitter) {\r\n            return;\r\n        }\r\n        if (this.keyPoll.isDown(Keyboard.W) || this.keyPoll.isDown(Keyboard.UP)) {\r\n            down = true;\r\n            this.heroParticle.velY = -speed;\r\n        } else if (this.keyPoll.isDown(Keyboard.S) || this.keyPoll.isDown(Keyboard.DOWN)) {\r\n            down = true;\r\n            this.heroParticle.velY = speed;\r\n        } else if (!this.pointed) {\r\n            this.heroParticle.velY = 0;\r\n        }\r\n        if (this.keyPoll.isDown(Keyboard.A) || this.keyPoll.isDown(Keyboard.LEFT)) {\r\n            down = true;\r\n            this.heroParticle.velX = -speed;\r\n        } else if (this.keyPoll.isDown(Keyboard.D) || this.keyPoll.isDown(Keyboard.RIGHT)) {\r\n            down = true;\r\n            this.heroParticle.velX = speed;\r\n        } else if (!this.pointed) {\r\n            this.heroParticle.velX = 0;\r\n        }\r\n\r\n        if (down) {\r\n            // end pointed\r\n            this.pointHeroToStop();\r\n        } else if (this.keyboarded) {\r\n            this.keyboarded = false;\r\n            this.heroParticle.velX = 0;\r\n            this.heroParticle.velY = 0;\r\n        }\r\n    }\r\n\r\n    private pointHeroToStop(): void {\r\n        this.pointed = false;\r\n\r\n        if (!this.heroParticle || !this.heroEmitter) {\r\n            return;\r\n        }\r\n\r\n        if (this.turnTowardsPoint) {\r\n            this.heroEmitter!.removeAction(this.turnTowardsPoint);\r\n            this.turnTowardsPoint = null;\r\n        }\r\n\r\n        if (this.zonedAction) {\r\n            this.heroEmitter!.removeAction(this.zonedAction);\r\n            this.zonedAction = null;\r\n            this.destinationZone = null;\r\n        }\r\n    }\r\n\r\n    private createHeroControlModule(): void {\r\n        this.heroEmitter = new Emitter();\r\n        this.heroEmitter.addParticle(this.heroParticle!);\r\n        this.emitters.push(this.heroEmitter);\r\n\r\n        EventManager.on(EventType.POINTERDOWN_ON_VIEWPORT, (e: Point) => {\r\n            console.log('pointHeroTo', e)\r\n            console.log('heroPosition', this.heroParticle?.x, this.heroParticle?.y)\r\n            this.pointHeroTo(e);\r\n        });\r\n    }\r\n}","import { GameConfig } from './GameConfig';\r\nimport { KeyPoll } from './KeyPoll';\r\nimport { TouchPoll } from './TouchPoll';\r\nimport AssetsLoader from './AssetsLoader';\r\n\r\nimport {\r\n    Application,\r\n    Container,\r\n    Loader,\r\n    LoaderResource,\r\n    Renderer,\r\n} from \"pixi.js\";\r\nimport MapContainer from './map/MapContainer';\r\nimport GlobalStorage, { AnimateMapEntityType, ReplicatedUser } from './storage/GlobalStorage';\r\nimport Movements from './logic/Movements';\r\n\r\n\r\n// export async function game(container: HTMLElement): Promise<void> {\r\n\r\n//     const assets: AssetsLoader = new AssetsLoader();\r\n//     await assets.execute();\r\n\r\n//     const config = new GameConfig(container.clientWidth, container.clientHeight);\r\n//     const keyPoll = new KeyPoll();\r\n//     const touchPoll = new TouchPoll();\r\n\r\n//     const audioContext = new AudioContext();\r\n// }\r\n\r\nexport class GameInstance {\r\n    private _app: Application | null = null;\r\n    private _renderer: Renderer | null = null;\r\n    private _stage: Container | null = null;\r\n    private _mapContainer: MapContainer | null = null;\r\n    private _movements: Movements | null = null;\r\n\r\n    constructor(private _containerElement: HTMLElement) {\r\n        this.init();\r\n    }\r\n\r\n    private async init(): Promise<void> {\r\n        await this.initHero();\r\n        await this.initMovements();\r\n        await this.initAssest();\r\n        await this.initRenderer();\r\n        await this.initMap();\r\n        this._app?.ticker.add(this.update, this);\r\n    }\r\n\r\n    private update(time: number): void {\r\n        this._movements?.update(time);\r\n        this._mapContainer?.update(time);\r\n    }\r\n\r\n    private async initHero(): Promise<void> {\r\n        const worldWidth = GlobalStorage.get('worldWidth');\r\n        const worldHeight = GlobalStorage.get('worldHeight');\r\n\r\n        const hero: ReplicatedUser = {\r\n            id: '' + Date.now(),\r\n            type: AnimateMapEntityType.user,\r\n            x: worldWidth / 2,\r\n            y: worldHeight / 2,\r\n            data: {\r\n                videoUrlString: '',//avatars[x % 12],\r\n                avatarUrlString: '',//default_avatars[y % 4],\r\n                dotColor: Math.floor(Math.random() * 16777215),\r\n            }\r\n        }\r\n\r\n        GlobalStorage.set('hero', hero);\r\n    }\r\n\r\n    private async initMovements(): Promise<void> {\r\n        this._movements = new Movements();\r\n    }\r\n\r\n    private async initAssest(): Promise<void> {\r\n        const assets: AssetsLoader = new AssetsLoader();\r\n        await assets.execute();\r\n    }\r\n\r\n    private async initRenderer(): Promise<void> {\r\n        this._app = new Application({\r\n          transparent: true,\r\n          antialias: true,\r\n          resizeTo: this._containerElement,\r\n          backgroundColor: 0x10bb99,\r\n          resolution: window.devicePixelRatio,\r\n        });\r\n    \r\n        this._renderer = this._app.renderer;\r\n        this._stage = this._app.stage;\r\n    \r\n        this._containerElement.appendChild(this._app.view);\r\n\r\n        this._app.start();\r\n    }\r\n\r\n    private async initMap(): Promise<void> {\r\n        this._mapContainer = new MapContainer(this._app!);\r\n    \r\n        await this._mapContainer.init();\r\n    \r\n        this._stage?.addChild(this._mapContainer);\r\n    }\r\n}","\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport { GameInstance } from '@/game/Game';\r\n\r\n@Component({\r\n  components: {}\r\n})\r\nexport default class Game extends Vue {\r\n    mounted() {\r\n        setTimeout(() => {\r\n            // game(this.$refs.game as HTMLElement);\r\n            new GameInstance(this.$refs.game as HTMLElement);\r\n        }, 100);\r\n    }\r\n\r\n    destroyed() {\r\n        console.log('Game', 'destroyed')\r\n    }\r\n\r\n    private handleClick(): void {\r\n        console.log(' CLICK')\r\n    }\r\n}\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Game.vue?vue&type=template&id=cc5a28ae&scoped=true&\"\nimport script from \"./Game.vue?vue&type=script&lang=ts&\"\nexport * from \"./Game.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Game.vue?vue&type=style&index=0&id=cc5a28ae&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cc5a28ae\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\nimport \"@/styles/assets.styl\";\nimport { Component, Vue } from \"vue-property-decorator\";\nimport Game from \"./vue/Game.vue\";\n\n@Component({\n    components: {\n        Game\n    },\n})\nexport default class App extends Vue {\n    mounted() {\n        console.log(\"App mounted\");\n    }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=bd1513aa&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport App from './App.vue'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  render: h => h(App)\r\n}).$mount('#app');"],"sourceRoot":""}